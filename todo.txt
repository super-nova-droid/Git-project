My TO-DO List
1. Write an article
2. Code
3. Study lessons
4. Attend class on time
5. Visit library
6. Apply for IT jobs.
7. Commit to increase your skills in IT
8. Search for short courses in IT

3

Automatic Zoom
Software Engineering
25S1 Page 1 of 3
Practical
Software Version Control with Git / GitHub
Learning Outcomes
To be able to:
1. Apply what you learned about Git and version control, the basic Git commands, and
how to use its features to boost your work efficiency.
2. Demonstrate how to extend these features using GitHub.
Pre-requisites
To complete this Practical, you'll need the following:
• A command line interface.
• A text editor of your choice (such as VS Code).
• A GitHub account.
There are 2 parts in this Practical. Part 1 is to be completed before commencing Part 2.
1. Part 1 (40mins): eLearning to understand how to use Git, Github as the version
control tool in software development projects. You may need to go through a few
times for the ‘Basic Commands in Git’. Mastering the commands will be very useful
to complete the remaining parts of the practical.
2. Part 2 (1hour): Applying what you have learned in Part 1.
Part 1
1. What is Git / GitHub / GitLab ? (10min)
https://www.youtube.com/watch?v=21Gl97tkbHU
2. Basic Commands in Git (16min) – watch this video multiple times to be familiar with
the commands
https://www.youtube.com/watch?v=eL_0Ok_Gkas&index=4&list=PLeo1K3hjS3us
JuxZZUBdjAcilgfQHkRzW
3. Branches in Git (12min) – try to understand why branches are necessary
https://www.youtube.com/watch?v=sgzkY5vFKQQ&list=PLeo1K3hjS3usJuxZZU
BdjAcilgfQHkRzW&index=
Software Engineering
25S1 Page 2 of 3
Part 2
Task 1 – Create and Initialize a Project in Git
1. Create a folder and name it: Git and GitHub Practical.
2. Initialize your project.
3. Create a Git project and name it todo.txt. This is what the file looks like:
My TO-DO List
1. Write an article
2. Code
3. Study lessons
4. Attend class on time
5. Visit library
6. Apply for IT jobs.
Task 2 – Push Repository to GitHub
1. Create a GitHub account (this should be done prior to coming to class for Practical).
2. Create a repository: click on + symbol then choose New repository. Give your repo
a name then scrolls down and click on Create repository.
3. Add and commit file(s).
4. Add file(s) in Git.
5. Commit file(s) in Git.
6. Push repository to GitHub. Your project already exists hence, you will use the
following commands:
a. Connect your local repo and the remote repo on GitHub.
b. Change main branch’s name to main
c. Push your repo from your local device to GitHub.
Task 3 – Add new tasks to your “My TO-DO List”
7. Commit to increase your skills in IT
8. Search for short courses in IT
1. After making changes to the file, move it to modified state.
2. Add (stage) the modified file, and then commit and push (3 steps).
Software Engineering
25S1 Page 3 of 3
Task 4 – Use Branches in Git
3. Create a new branch called test
4. After creating new branch from previous state. Please add the following tasks to the
new branch.
9. Enrol for short courses in IT
10. Complete the course
11. Get certified
12. Apply for new IT job
5. This is what the file will eventually look like:
My TO-DO List
1. Write an article
2. Code
3. Study lessons
4. Attend class on time
5. Visit library
6. Apply for IT jobs.
7. Commit to increase your skills in IT
8. Search for short courses in IT
9. Enrol for short courses in IT
10. Complete the course
11. Get certified
12. Apply for new IT job
